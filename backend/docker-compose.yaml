services:
  postgres:
    image: bitnami/postgresql:16
    environment:
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_DATABASE: '${POSTGRESQL_DATABASE:-postgres}'
    volumes:
      - db_data:/bitnami/postgresql
    ports:
      - '0.0.0.0:5432:5432'
    networks:
      - breedersdb_net

  hasura:
    image: hasura/graphql-engine:v2.40.0
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgres@postgres:5432/${POSTGRESQL_DATABASE:-postgres}
      PG_DATABASE_URL: postgres://postgres:postgres@postgres:5432/${POSTGRESQL_DATABASE:-postgres}
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## run console offline (i.e load console assets from server instead of CDN)
      HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## don't infer function permissions from entity
      HASURA_GRAPHQL_INFER_FUNCTION_PERMISSIONS: 'false'
    env_file:
      - ./.env
    networks:
      - breedersdb_net

  nginx:
    image: nginx:1.26
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - breedersdb_net
    command: >
      sh -c 'echo "
      events {
          worker_connections 1024;
      }

      http {
          client_max_body_size 32m;

          upstream hasura_backend {
              server hasura:8080;
          }
          upstream cloud_function {
              server cloud-function:8090;
          }
          upstream frontend {
              server host.docker.internal:9000;
          }

          server {
              listen 80;
              server_name localhost;

              location /api/console {
                  proxy_set_header Host localhost;
                  proxy_pass http://hasura_backend/console;
              }

              location /api/v1/ {
                  proxy_set_header Host localhost;
                  proxy_pass http://hasura_backend/v1/;
              }

              # trailing slash in proxy_pass removes url of location
              location /api/internal/ {
                  proxy_set_header Host localhost;
                  proxy_pass http://cloud_function/;
              }

              location /api/assets/ {
                  proxy_set_header Host localhost;
                  proxy_pass http://cloud_function/;
              }

              location / {
                  proxy_set_header Host localhost;
                  proxy_pass http://frontend/;
              }

              # Redirect /api to /api/console
              location = /api {
                  return 301 /api/console;
              }
          }
      }
      " > /etc/nginx/nginx.conf && nginx -g "daemon off;"'

volumes:
  db_data:

networks:
  breedersdb_net:
    name: breedersdb_net
