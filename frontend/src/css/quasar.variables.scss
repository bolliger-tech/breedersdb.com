// Quasar SCSS (& Sass) Variables
// --------------------------------------------------
// To customize the look and feel of this app, you can override
// the Sass/SCSS variables found in Quasar's source Sass/SCSS files.

// Check documentation for full list of Quasar variables

// Your own variables (that are declared here) and Quasar's own
// ones will be available out of the box in your .vue/.scss/.sass files

// It's highly recommended to change the default colors
// to match your app's branding.
// Tip: Use the "Theme Builder" on Quasar's documentation website.
:root {
  // By default, the folowing colors are used:
  // primary: hsl(189, 75%, 24%);
  // secondary: hsl(28, 75%, 24%);
  // accent: hsl(350, 75%, 24%);
  //
  // If you overwrite the primary color only, the secondary and accent colors
  // will be generated based on the primary color.
  //
  // Use the following variables to overwrite the colors (every variable is optional):
  // --bdb-primary-color-hue, --bdb-primary-color-saturation, --bdb-primary-color-lightness
  // --bdb-secondary-color-hue, --bdb-secondary-color-saturation, --bdb-secondary-color-lightness
  // --bdb-accent-color-hue, --bdb-accent-color-saturation, --bdb-accent-color-lightness

  --bdb-primary-color-hue: 189; // Is overwritten by index.html
  --bdb-secondary-color-hue: calc(var(--bdb-primary-color-hue) + 180 + 19);
  --bdb-accent-color-hue: calc(var(--bdb-primary-color-hue) - 180 - 19);

  // Generates the variables:
  // --bdb-primary-100 to --bdb-primary-900
  // --bdb-secondary-100 to --bdb-secondary-900
  // --bdb-accent-100 to --bdb-accent-900
  @each $type in primary secondary accent {
    --bdb-#{$type}-color-saturation: 75%;
    --bdb-#{$type}-color-lightness: 24%;

    --bdb-#{$type}-color-saturation-step: (
      min(
          var(--bdb-#{$type}-color-saturation),
          100% - var(--bdb-#{$type}-color-saturation)
        ) /
        4
    );

    --bdb-#{$type}-color-lightness-step: (
      min(
          var(--bdb-#{$type}-color-lightness),
          100% - var(--bdb-#{$type}-color-lightness)
        ) /
        4
    );

    @for $i from 1 through 9 {
      --bdb-#{$type}-#{$i}00: hsl(
        var(--bdb-#{$type}-color-hue),
        calc(
          var(--bdb-#{$type}-color-saturation) - var(
              --bdb-#{$type}-color-saturation-step
            ) *
            #{5 -
            $i}
        ),
        calc(
          var(--bdb-#{$type}-color-lightness) - var(
              --bdb-#{$type}-color-lightness-step
            ) *
            #{$i -
            5}
        )
      );
    }
  }
}

$primary: var(--bdb-primary-500); // Overwritten in App.vue
$secondary: var(--bdb-secondary-500); // Overwritten in App.vue
$accent: var(--bdb-accent-500); // Overwritten in App.vue

$shade: #eeeeee; // Overwritten in App.vue

$text-muted: #6c757d;
$bg-muted: #f8f9fa;

$dark: #1d1d1d;
$dark-page: #121212;

$positive: #21ba45;
$negative: #c10015;
$info: #31ccec;
$warning: #f2c037;

// Typography

$body-font-size: 16px;
$base-title-size: clamp(
  2.2rem,
  min(5svw, 5svh) + 0.75rem,
  3rem
); // starts growing at 464px

$h1: (
  // 3rem
  size: $base-title-size,
  line-height: 1em,
  letter-spacing: -0.025em,
  weight: 700
);
$h2: (
  // 2rem
  size: calc($base-title-size * (2 / 3)),
  line-height: 1em,
  letter-spacing: -0.0125em,
  weight: 700
);
$h3: (
  // 1.5rem
  size: calc($base-title-size / 2),
  line-height: 1em,
  letter-spacing: 0,
  weight: 700
);
$h4: (
  // 1.25rem
  size: calc($base-title-size / 2.4),
  line-height: 1em,
  letter-spacing: 0.0125em,
  weight: 750
);
$h5: (
  // 1rem
  size: calc($base-title-size / 3),
  line-height: 1rem,
  letter-spacing: 0.025em,
  weight: 800
);
$h6: (
  // 0.75rem
  size: calc($base-title-size / 4),
  line-height: 0.75rem,
  letter-spacing: 0.05em,
  weight: 900
);
$subtitle1: (
  size:
    map-get(
      $map: $h5,
      $key: 'size',
    ),
  line-height:
    map-get(
      $map: $h5,
      $key: 'line-height',
    ),
  letter-spacing:
    map-get(
      $map: $h5,
      $key: 'letter-spacing',
    ),
  weight:
    map-get(
      $map: $h5,
      $key: 'weight',
    ),
);
$subtitle2: (
  size:
    map-get(
      $map: $h6,
      $key: 'size',
    ),
  line-height:
    map-get(
      $map: $h6,
      $key: 'line-height',
    ),
  letter-spacing:
    map-get(
      $map: $h6,
      $key: 'letter-spacing',
    ),
  weight:
    map-get(
      $map: $h6,
      $key: 'weight',
    ),
);

$body1: (
  size: 1rem,
  line-height: 1.5rem,
  letter-spacing: 0.03125em,
  weight: 400,
);
$body2: (
  size: 0.875rem,
  line-height: 1.25rem,
  letter-spacing: 0.01786em,
  weight: 400,
);
$overline: (
  size: 0.75rem,
  line-height: 2rem,
  letter-spacing: 0.16667em,
  weight: 500,
);
$caption: (
  size: 0.75rem,
  line-height: 1.25rem,
  letter-spacing: 0.03333em,
  weight: 400,
);
